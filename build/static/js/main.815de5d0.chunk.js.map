{"version":3,"sources":["stores/index.js","stores/queryStore.js","components/Album/style.js","components/Album/index.js","components/App.js","serviceWorker.js","index.js"],"names":["stores","Query","observable","action","fetch","method","headers","body","JSON","stringify","query","filter","then","res","json","localStorage","setItem","data","queryArtists","array","item","navigator","onLine","fetchAlbums","parse","getItem","Wrapper","styled","div","TitleSection","section","Title","span","SearchSection","InputTextStyled","input","attrs","props","type","size","placeholder","ArtistSection","Image","img","src","ArtistTitle","AlbumSection","AlbumItem","AlbumImage","animate","AlbumTitle","p","AlbumNotFound","Album","inject","observer","getAlbums","length","map","index","key","id","image","name","this","editFilter","autoFocus","value","onChange","event","target","albums","React","Component","App","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0QAEaA,EAAS,CAClBC,MC4CW,I,uNA3CZC,K,wEAAoB,M,kCACpBA,K,uGAEAC,K,oFACa,WACZC,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBACzBC,KAAMC,KAAKC,UAAU,CAAEC,MAAM,wCAAD,OAEA,EAAKC,OAFL,yLAe/BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJE,aAAaC,QAAQ,EAAKL,OAAQH,KAAKC,UAAUI,EAAII,KAAKC,eAC1D,EAAKD,KAAOf,IAAWiB,MAAMN,EAAII,KAAKC,qB,wCAKzCf,K,oFACY,SAACiB,GACZ,EAAKT,OAASS,EACVC,UAAUC,OACZ,EAAKC,cAEL,EAAKN,KAAOT,KAAKgB,MAAMT,aAAaU,QAAQL,Q,iuFCvC3C,I,EAAMM,EAAUC,IAAOC,IAAV,KAEPC,EAAeF,IAAOG,QAAV,KAUZC,EAAQJ,IAAOK,KAAV,KAMLC,EAAgBN,IAAOG,QAAV,KASbI,EAAkBP,IAAOQ,MAAMC,OAAM,SAAAC,GAAK,MAAK,CAC1DC,KAAM,OACNC,KAAM,MACNC,YAAa,YAHgBb,CAAH,KAgBfc,EAAgBd,IAAOG,QAAV,KAUbY,EAAQf,IAAOgB,IAAV,KACL,SAAAN,GAAK,OAAIA,EAAMO,OAKfC,EAAclB,IAAOK,KAAV,KAMXc,EAAenB,IAAOG,QAAV,KAQZiB,EAAYpB,IAAOC,IAAV,KAQToB,EAAarB,IAAOgB,IAAIP,OAAM,SAAAC,GAAK,MAAK,CACjDO,IAAKP,EAAMO,OADWjB,CAAH,KAIZ,SAAAU,GAAK,OAAIA,EAAMY,QAAU,OAAS,UA4BhCC,EAAavB,IAAOwB,EAAV,IAKnB,IAKSC,EAAgBzB,IAAOK,KAAV,KClEXqB,EAtDdC,YAAO,Q,GACPC,Y,6MAGCC,UAAY,SAACvC,GACX,OACE,kBAACS,EAAD,KACE,kBAACoB,EAAD,KAEI7B,GAAQA,EAAKwC,OAAS,EACpBxC,EAAKyC,KAAI,SAACtC,EAAMuC,GAAP,OACL,kBAACZ,EAAD,CAAWE,SAAS,EAAMW,IAAKxC,EAAKyC,IAClC,kBAACb,EAAD,CAAYJ,IAAKxB,EAAK0C,QACtB,kBAACZ,EAAD,KAAa9B,EAAK2C,UAKxB,kBAACX,EAAD,oC,wEAOF,IAAD,EAC8BY,KAAK3B,MAAMpC,MAAxCgB,EADD,EACCA,KAAMN,EADP,EACOA,OAAQsD,EADf,EACeA,WACtB,OACE,kBAACvC,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,sBAEF,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAiBgC,WAAS,EAACC,MAAOxD,EAAQyD,SAAU,SAAAC,GAAK,OAAIJ,EAAWI,EAAMC,OAAOH,WAEtFlD,GAAQA,EAAKwC,OAAS,EACrB,kBAAC/B,EAAD,KACE,kBAACe,EAAD,KACE,kBAACC,EAAD,CAAOE,IAAK3B,EAAK,GAAG6C,QACpB,kBAACjB,EAAD,KAAc5B,EAAK,GAAG8C,OAEvB9C,EAAK,GAAGsD,QAAUtD,EAAK,GAAGsD,OAAOd,OAAS,GACvCO,KAAKR,UAAL,YAAmBvC,EAAK,GAAGsD,UAGjC,kBAAC9B,EAAD,KACE,kBAACW,EAAD,uC,GA5CQoB,IAAMC,a,MCFLC,G,iLAEf,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWvB,U,GALVmB,IAAMC,WCOjCI,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BhE,UAAUiE,cACPC,SAASH,GACTxE,MAAK,SAAA4E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfxE,UAAUiE,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAAST,KAMlBO,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCxFjEC,iBACI,kBAAC,IAAarG,EACZ,kBAAC,GAAD,OAEJsG,SAASC,eAAe,SDUnB,SAAkBlB,GACvB,GAA6C,kBAAmBhE,UAAW,CAGzE,GADkB,IAAImF,IAAIC,GAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMqB,GAAN,sBAEP5B,KAgEV,SAAiCO,EAAOC,GAEtCjF,MAAMgF,GACHxE,MAAK,SAAAiG,GAEJ,IAAMC,EAAcD,EAASvG,QAAQyG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5F,UAAUiE,cAAc4B,MAAMtG,MAAK,SAAA4E,GACjCA,EAAa2B,aAAavG,MAAK,WAC7BmE,OAAOC,SAASoC,eAKpBjC,GAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEArFAqB,CAAwBjC,EAAOC,GAI/BhE,UAAUiE,cAAc4B,MAAMtG,MAAK,WACjCmF,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OChC/BC,K","file":"static/js/main.815de5d0.chunk.js","sourcesContent":["import Query from './queryStore';\r\n\r\nexport const stores = {\r\n    Query\r\n}","import { observable, action, autorun } from 'mobx';\r\n\r\nclass Query {\r\n\r\n  @observable filter = '';\r\n  @observable data;\r\n\r\n  @action\r\n  fetchAlbums = () => {\r\n    fetch('https://spotify-graphql-server.herokuapp.com/graphql', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ query: \r\n          `{\r\n            queryArtists(byName: \"${this.filter}\") {\r\n            name\r\n            id\r\n            image\r\n            albums {\r\n              name\r\n              id\r\n              image\r\n            }\r\n          }\r\n        }` \r\n      }),\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      localStorage.setItem(this.filter, JSON.stringify(res.data.queryArtists));\r\n      this.data = observable.array(res.data.queryArtists)\r\n      // console.log(res.data.queryArtists)\r\n    });\r\n  }\r\n\r\n  @action\r\n  editFilter = (item) => {\r\n    this.filter = item;\r\n    if (navigator.onLine) {\r\n      this.fetchAlbums();\r\n    }else{\r\n      this.data = JSON.parse(localStorage.getItem(item));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new Query();","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div``;\r\n\r\nexport const TitleSection = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const Title = styled.span`\r\n  font-size: 3rem;\r\n  font-weight: 600;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const SearchSection = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InputTextStyled = styled.input.attrs(props => ({\r\n  type: \"text\",\r\n  size: \"1em\",\r\n  placeholder: \"Search\"\r\n}))`\r\n  :focus {\r\n      outline: none;\r\n  };\r\n  color: black;\r\n  width: 30rem;\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n  border: 2px solid black;\r\n  border-radius: 3rem;\r\n`;\r\n\r\nexport const ArtistSection = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  margin: 2rem;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  src: url(${props => props.src});\r\n  height: 9rem;\r\n  width: 9rem;\r\n`;\r\n\r\nexport const ArtistTitle = styled.span`\r\n  font-size: 3rem;\r\n  font-weight: 600;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const AlbumSection = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 1rem;\r\n`;\r\n\r\nexport const AlbumItem = styled.div`\r\n  height: 12.5rem;\r\n  width: 9rem;\r\n  margin-left: 0.8rem;\r\n  margin-right: 0.8rem;\r\n  margin-bottom: 1.3rem;\r\n`;\r\n\r\nexport const AlbumImage = styled.img.attrs(props => ({\r\n    src: props.src\r\n  }))`  \r\n  transition: width 2s;\r\n  width: ${props => props.animate ? \"20px\" : \"10px\"};\r\n  height: auto;\r\n  width: 9rem;\r\n  -webkit-animation: fadein 1s;\r\n       -moz-animation: fadein 1s; \r\n        -ms-animation: fadein 1s; \r\n         -o-animation: fadein 1s;\r\n            animation: fadein 1s;\r\n  \r\n  @keyframes fadein {\r\n    from { opacity: 0; }\r\n    to   { opacity: 1; }\r\n  }\r\n  @-moz-keyframes fadein {\r\n      from { opacity: 0; }\r\n      to   { opacity: 1; }\r\n  }\r\n  @-webkit-keyframes fadein {\r\n      from { opacity: 0; }\r\n      to   { opacity: 1; }\r\n  }\r\n  @-ms-keyframes fadein {\r\n      from { opacity: 0; }\r\n      to   { opacity: 1; }\r\n  }\r\n`;\r\n\r\n\r\nexport const AlbumTitle = styled.p`\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  ${'' /* white-space: nowrap; */}\r\n  text-overflow: ellipsis;\r\n  margin: 0;\r\n`;\r\n\r\nexport const AlbumNotFound = styled.span`\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  margin: 2rem;\r\n`;","import React from \"react\";\r\nimport { Wrapper, TitleSection, Title, SearchSection, InputTextStyled, ArtistSection, Image, ArtistTitle, AlbumSection, AlbumItem, AlbumNotFound, AlbumImage, AlbumTitle } from './style';\r\nimport {observer, inject} from \"mobx-react\";\r\nimport { observable } from \"mobx\"\r\n\r\n@inject('Query')\r\n@observer\r\nclass Album extends React.Component {\r\n\r\n  getAlbums = (data) => {\r\n    return (\r\n      <Wrapper>\r\n        <AlbumSection>\r\n          {\r\n            data && data.length > 0 ? \r\n              data.map((item, index) => (\r\n                  <AlbumItem animate={true} key={item.id}>\r\n                    <AlbumImage src={item.image} />\r\n                    <AlbumTitle>{item.name}</AlbumTitle>\r\n                  </AlbumItem>\r\n                )\r\n              )\r\n              :\r\n              <AlbumNotFound>No search results found.</AlbumNotFound>\r\n          }\r\n        </AlbumSection>\r\n      </Wrapper>   \r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { data, filter, editFilter } = this.props.Query;\r\n    return (\r\n      <Wrapper>\r\n        <TitleSection>\r\n          <Title>Album Finder</Title>\r\n        </TitleSection>\r\n        <SearchSection>\r\n          <InputTextStyled autoFocus value={filter} onChange={event => editFilter(event.target.value)} />\r\n        </SearchSection>\r\n        {data && data.length > 0 ?\r\n          <Wrapper>\r\n            <ArtistSection>\r\n              <Image src={data[0].image} />\r\n              <ArtistTitle>{data[0].name}</ArtistTitle>\r\n            </ArtistSection>\r\n            {data[0].albums && data[0].albums.length > 0 && \r\n                this.getAlbums([...data[0].albums])}\r\n          </Wrapper>\r\n         :\r\n          <ArtistSection>\r\n            <AlbumNotFound>No search results found.</AlbumNotFound>\r\n          </ArtistSection>\r\n        }\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Album;\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Album from './Album';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n      return (\r\n          <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" component={Album} />\r\n            </Switch>\r\n          </BrowserRouter>\r\n      );\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { stores } from './stores';   \nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n    <Provider {...stores}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}